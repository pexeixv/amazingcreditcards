---
import BaseLayout from "@/components/BaseLayout.astro";
import CreditCard from "@/components/CreditCard.astro";
import { type Bank, type Card } from "@/js/interfaces";
import hygraph from "@/js/hygraph";
const assetBaseUrl = import.meta.env.ASSET_BASE_URL;

export async function getStaticPaths() {
  const banks = (await hygraph("banksWithCards", "banks")) as Array<Bank>;

  return banks.map((bank: Bank) => ({
    params: {
      slug: bank.slug,
    },
    props: {
      cards: bank.cards,
      bank,
    },
  }));
}

interface Props {
  cards: Array<Card>;
  bank: Bank;
}

const { cards, bank } = Astro.props as Props;

if (!cards || !bank) {
  throw new Error("Cards or bank not found");
}
---

<BaseLayout
  title={bank.name}
  image={bank?.ogImage?.url}
  description={bank.description}
>
  <section class="border-b-6 border-black">
    <div
      class="container mx-auto px-5 py-16 lg:py-20 grid lg:grid-cols-2 place-items-center gap-8"
    >
      <div
        class="w-fit border-2 border-black rounded-lg flex flex-col gap-4 p-2 lg:p-4 bg-white max-w-3xl justify-center min-w-60"
      >
        <img
          src={bank?.logo?.url}
          alt={bank.name}
          class="h-[50px] w-auto object-contain"
        />
        <h2 class="text-center">
          {bank.pageTitle || bank.name}
        </h2>
      </div>
      {
        bank.description && (
          <div class="mx-auto bg-white border-brutal-lg py-10 px-10">
            {bank.description}
          </div>
        )
      }
    </div>
  </section>
  <section>
    <div class="container mx-auto px-5 py-16 lg:py-20">
      <div class="grid lg:grid-cols-3 gap-12 lg:gap-16">
        {
          cards.map((card: Card) => (
            <CreditCard
              name={card.name}
              image={
                card?.image?.handle
                  ? `${assetBaseUrl}/resize=h:120,fit:crop/quality=value:90/output=format:webp/${card?.image?.handle}`
                  : card?.image?.url
              }
              apply={card?.applyUrl}
              learn={`/cards/${card?.slug}`}
              rating={card?.rating}
              description={card?.description}
            />
          ))
        }
      </div>
      {
        !cards.length && (
          <p class="text-center">No cards to show for this issuer.</p>
        )
      }
    </div>
  </section>

  {
    bank.summary && bank.summary?.html && (
      <section>
        <div
          class="prose mx-auto border-brutal-lg py-10 px-10  prose-headings:border-brutal-sm prose-headings:p-2 prose-headings:w-fit  lg:mx-auto bg-white border-brutal-lg p-6 lg:p-10 mb-20 max-w-4xl   lg:prose-lg font-sans prose-headings:font-lexend"
          set:html={bank.summary?.html}
        />
      </section>
    )
  }
</BaseLayout>

---
import { SEO } from "astro-seo";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import TailwindSizeIndicator from "@/components/TailwindSizeIndicator.astro";
import "@fontsource-variable/lexend-giga";
import "@fontsource-variable/lexend";
import "@/tailwind.css";
import hygraph from "@/js/hygraph";
import { type Bank } from "@/js/interfaces";
const banks = (await hygraph("banks")) as Array<Bank>;
const categories = (await hygraph("categories")) as Array<Bank>;

interface Props {
  title?: string;
  description?: string;
  image?: string;
}

const {
  title = "Amazing Credit Cards",
  description = "Discover the ideal credit card for your financial goals. Explore our curated selection, compare rewards, rates, and benefits, and apply online. Start your journey to smarter spending today.",
  image = "https://accgavn.netlify.app/preview.jpg",
} = Astro.props as Props;
---

<!doctype html>
<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <SEO
      {title}
      {description}
      openGraph={{
        basic: {
          title,
          type: "website",
          image,
          url: `https://amazingcreditcards.in${Astro.url.pathname}`,
        },
        image: {
          url: image,
        },
      }}
      ,
      twitter={{
        creator: "@amazingcreditc",
        site: "@amazingcreditc",
        description,
        image,
        title,
        card: "summary_large_image",
      }}
      ,
    />
    <link rel="shortcut icon" href="/fav.png" type="image/x-icon" />
    <link rel="sitemap" href="/sitemap-index.xml" />
  </head>
  <body class="min-h-screen flex flex-col overflow-x-hidden font-lexend-giga">
    <Header {banks} {categories} />
    <TailwindSizeIndicator />
    <main class="flex-1">
      <slot />
    </main>
    <Footer />
    <div id="graph-bg" class="inset-0 fixed -z-20"></div>
    <script type="text/javascript">
      (function (c, l, a, r, i, t, y) {
        c[a] =
          c[a] ||
          function () {
            (c[a].q = c[a].q || []).push(arguments);
          };
        t = l.createElement(r);
        t.async = 1;
        t.src = "https://www.clarity.ms/tag/" + i;
        y = l.getElementsByTagName(r)[0];
        y.parentNode.insertBefore(t, y);
      })(window, document, "clarity", "script", "nnn0zb5uw6");
    </script>
  </body>
</html>

---
import { twMerge } from "tailwind-merge";
const { banks, categories } = Astro.props;
const filteredBanks = banks.map(({ name, slug, shortLogo }) => ({
  label: name,
  href: `/issuers/${slug}`,
  image: shortLogo?.url || "",
}));
import { Menu, X, Twitter, ChevronDown, Asterisk } from "lucide-astro";

const filteredCategories = categories.map(({ name, slug, emoji }) => ({
  label: name,
  href: `/categories/${slug}`,
  image: emoji.url,
}));

const links = [
  {
    label: "Home",
    href: "/",
  },
  {
    label: "Issuers",
    href: "/issuers",
    links: filteredBanks,
    icon: ChevronDown,
    grid: "grid-cols-2 min-w-[500px]",
  },
  {
    label: "Categories",
    href: "/categories",
    links: filteredCategories,
    icon: ChevronDown,
    grid: "grid-cols-2 min-w-[500px]",
  },
  {
    label: "Blog",
    href: "/blog",
  },
  {
    label: "About",
    href: "/about-us",
  },
  {
    icon: Twitter,
    href: "//x.com/amazingcreditc",
    target: "_blank",
  },
];
---

<header class="bg-yellow-500 border-b-6 border-black z-40">
  <div
    class="container mx-auto px-5 py-5 lg:py-10 flex items-center justify-between"
  >
    <a href="/">
      <img
        src="/logo-circle.png"
        alt="Amazing Credit Cards"
        class="h-20 lg:h-28 -mb-16 lg:-mb-44 relative bottom-2 lg:bottom-4"
      />
    </a>
    <button
      data-menu-toggler
      id="hamburger"
      class="border-brutal-sm px-3 py-1 bg-white text-sm hover:bg-yellow-100 transition-colors duration-300 lg:hidden"
    >
      <Menu class="size-5" />
    </button>
    <nav class="max-lg:hidden">
      <ul class="flex items-center gap-4">
        {
          links.map((link) =>
            link.links ? (
              <li class="relative group">
                <a
                  href={link.href}
                  class="border-brutal-sm px-3 py-1 bg-white text-sm hover:bg-yellow-100 transition-colors duration-300 flex items-center gap-1"
                  target={link.target}
                >
                  {link.label}
                  {link.icon && (
                    <link.icon
                      class="size-4"
                      fill="black"
                      stroke="transparent"
                    />
                  )}
                </a>
                <div class="absolute left-1/2 -translate-x-1/2 top-full pt-4 opacity-0 pointer-events-none transition-all duration-300 group-hover:opacity-100 group-hover:pointer-events-auto w-max">
                  <ul
                    class={twMerge([
                      "bg-white border-brutal p-4 gap-2 grid",
                      link.grid,
                    ])}
                    ])}
                  >
                    {link.links.map((sublink) => (
                      <li>
                        <a
                          class="whitespace-nowrap text-sm flex items-center gap-2"
                          href={sublink.href}
                        >
                          <img src={sublink.image} alt="" class="h-[20px]" />
                          {sublink.label}
                        </a>
                      </li>
                    ))}
                  </ul>
                </div>
              </li>
            ) : (
              <li>
                <a
                  href={link.href}
                  class="border-brutal-sm px-3 py-1 bg-white text-sm hover:bg-yellow-100 transition-colors duration-300 flex items-center gap-1"
                  target={link.target}
                >
                  {link.label}
                  {link.icon && (
                    <link.icon
                      class="size-4"
                      fill="black"
                      stroke="transparent"
                    />
                  )}
                </a>
              </li>
            )
          )
        }
      </ul>
    </nav>
  </div>
</header>

<aside
  id="aside"
  class="fixed top-0 -right-[28rem] w-[70%] max-w-md bg-white z-50 border-l-6 border-black transition-all duration-500 p-5 lg:p-10 pb-28 flex flex-col h-screen overflow-y-auto"
>
  <div class="flex flex-col flex-1">
    <div class="flex justify-end">
      <button
        id="hamburger"
        data-menu-toggler
        class="border-brutal-sm px-3 py-1 bg-white text-sm  transition-colors duration-300 lg:hidden"
      >
        <X class="size-5" />
      </button>
    </div>
    <nav class="mt-2 flex-1 flex flex-col">
      <ul class="flex flex-col gap-8 items-start">
        {
          links.map((link) =>
            link.links ? (
              <li class="relative cursor-pointer" data-submenu-toggler="true">
                <div class="border-brutal-sm px-3 py-1 bg-white  transition-colors duration-300 w-fit flex items-center">
                  {link.label}
                  {link.icon && (
                    <link.icon
                      class="size-4"
                      fill="black"
                      stroke="transparent"
                    />
                  )}
                </div>
                <ul class="px-4 py-2 ml-6 flex-col mt-4 hidden bg-white border-brutal-sm w-full divide-y-2 divide-neutral-200">
                  <li>
                    <a
                        class="whitespace-nowrap text-sm py-1 my-1 relative hover:left-2 left-0 transition-all duration-300 flex items-center gap-2"
                        href={link.href}
                      >
                        <Asterisk class="size-4" />
                        ALL
                      </a>
                  </li>
                  {link.links.map((sublink) => (
                    <li class="">
                      <a
                        class="whitespace-nowrap text-sm py-1 my-1 relative hover:left-2 left-0 transition-all duration-300 flex items-center gap-2"
                        href={sublink.href}
                      >
                        <img src={sublink.image} alt="" class="h-4">
                        <span>{sublink.label}</span>
                      </a>
                    </li>
                  ))}
                </ul>
              </li>
            ) : (
              <li>
                <a
                  href={link.href}
                  class="border-brutal-sm px-3 py-1 bg-white hover:bg-yellow-100 transition-colors duration-300 flex items-center"
                  target={link.target}
                >
                  {link.label}
                  {link.icon && (
                    <link.icon
                      class="size-4"
                      fill="black"
                      stroke="transparent"
                    />
                  )}
                </a>
              </li>
            )
          )
        }
      </ul>
    </nav>
  </div>
</aside>

<div
  data-menu-toggler
  id="backdrop"
  class="fixed h-screen w-screen bg-black/70 z-40 opacity-0 pointer-events-none"
>
</div>

<script>
  const aside = document.querySelector("#aside") as HTMLDivElement;
  const backdrop = document.querySelector("#backdrop") as HTMLDivElement;
  const body = document.body as HTMLBodyElement
  const menuTogglers = document.querySelectorAll(
    "[data-menu-toggler]"
  ) as NodeListOf<HTMLButtonElement>;

  menuTogglers.forEach((toggler) =>
    toggler.addEventListener("click", () => {
      aside.classList.toggle("right-0");
      aside.classList.toggle("-right-[28rem]");
      backdrop.classList.toggle("opacity-0");
      backdrop.classList.toggle("pointer-events-none");
      body.classList.toggle('overflow-y-hidden')
    })
  );

  const subMenuToggler = document.querySelectorAll(
    "[data-submenu-toggler]"
  ) as NodeListOf<HTMLButtonElement>;

  subMenuToggler.forEach((toggler) =>
    toggler.addEventListener("click", () => {
      const subMenu = toggler.querySelector("ul") as HTMLUListElement;
      subMenu.classList.toggle("hidden");
      subMenu.classList.toggle("flex");
    })
  );
</script>
